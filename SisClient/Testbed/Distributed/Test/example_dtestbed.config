# This file serves as an example distributed testbed configuration. It is also used
# by the unittests that cover the functionality of the dist_config_parser.py module.
# mgu

# This section specifies general attributes of the distributed testbed. Currently,
# there are only two: timeout, schedule.
[testbed]
# After t (= 60 in this case) seconds, the execution of remote processes in the
# cluster will be stopped. The experiment ends.
timeout: 60
# 'schedule' references the file which contains schedule information.
schedule: SisClient/Testbed/Distributed/Test/example_dtestbed.schedule
# 'remove_remote_files' is simply a flag that tells the testbed if it should
# remove those files and directories it copied to the remote machines or not.
# The default setting for this value is true.
remove_remote_files: false
# the next attribute specifies where to put the logfiles from remote processes.
logfile_directory: example_dtestbed_logfiles

# This section specifies the files that the experimenter wants to distribute
# in an instance of the distributed testbed.
[files]
file1: BaseLib/Test/test.sh

# The 'hosts' section enumerates all machines that shall be used within
# the instance. Host names are abbreviated by their key. This allows to
# specify them in other sections with less keystroke-overhead.
[hosts]
glab162: glab162.g-lab.tu-darmstadt.de
glab163: glab163.g-lab.tu-darmstadt.de

# Specifies the tracker. In general, every attribute of the TestbedTrackerConfiguration
# class can be specified here. This is done by providing the name of the corresponding
# setter method without the '_set' prefix as a key. Values are converted automatically
# to the appropriate data type.
[tracker]
host: glab162
files: file1
remote_base_directory: /home/tud_p2p/testbed
upload: 1024
download: 1024
waiting_time: 15

# Specifies a schema of a client. A schema can be used to parameterize a set of
# clients that share the same settings. The assignment of parameters works
# analogue to that of the tracker section described above.
[schema_1]
leech: file1
upload: 1024
download: 1024
# possibilities for exit_on:
# EXIT_ON_ALL_FINISHED = 1, EXIT_ON_SEEDING_TIME = 2, EXIT_ON_PLAYBACK_DONE = 3
exit_on: 1 

[schema_2]
seed: file1
upload: 1024
download: 1024

# This section describes a concrete deployment. A deployment always references a
# specific client schema and a host on which to run clients of that schema.
[deployment_1]
schema: schema_1
hosts: glab162
remote_base_directory: /home/tud_p2p/testbed

[deployment_2]
schema: schema_2
hosts: glab163
remote_base_directory: /home/tud_p2p/testbed
